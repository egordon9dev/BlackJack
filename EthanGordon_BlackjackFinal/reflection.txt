I still am using the base classes from my original UML, however I've added a lot more of them to break the code down into easier to manage fragments. I did this because I found no reason to scrap what was already working. I simply built on it as the project advanced. 

There don't seem to be many bugs because if I knew about them I probably would have already fixd them. However, occassionally the game will freeze. This hasn't happenes to me on the latest version so I think it's been fixed, but it might still happen very rarely. There is another issue, but I wouldn't really call it a bug because it's not a malfunction of the program it's more a malfunction of the user. What happens is, if you spam the buttons really fast, sometimes the game will let you get more than 5 cards even though you already have a five card charlie or it will let you get more cards even after you've busted. This is fine in my opinion because it can be assumed that the users aren't trying to lose, so they won't exploit this to increase there chances at losing.

Im really proud of the way the program looks when you play. I think it's pretty nice. Aside from pure asthetics, another few cool things are that I implemented splitting as well as multiplayer functionality. Both of these were pretty difficult to implement and required me to break Player up into a PartialPlayer, with a hand and the functions that go with that as well as a Player, which handles the money, bet, and all of the partial players. This allowed me to add partial players to the player so that it could be split. In the main code There are several players. A big thing that made multiplayer difficult was iterating over all the players and partial players while making sure not to land on anyone that's innactive (blackjack... etc.).

I think I would deserve an A+ on this project because the majority of the project is extra stuff that I didn't even need to do (gui, splitting, multiplayer, bullet-proofing) , and the finished project came out pretty well, and as far as I can tell bug-free.